name: Deploy Laravel via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Enviar arquivos para o public/
        run: |
          # Envia apenas os arquivos que devem estar no public/
          rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --exclude=/.git \
            --exclude=/.env \
            --exclude=/node_modules \
            --exclude=/storage \
            --exclude=/vendor \
            --exclude=/tests \
            ./public/ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:public_html/homolog/public

          # Envia outros arquivos necessários para a raiz do projeto (fora do public/)
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --include=/app/ \
            --include=/bootstrap/ \
            --include=/config/ \
            --include=/database/ \
            --include=/resources/ \
            --include=/routes/ \
            --include=/vendor/ \
            --include=/composer.json \
            --include=/composer.lock \
            --include=/artisan \
            --exclude=* \
            ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:public_html/homolog/

      - name: Executar comandos do Laravel
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd public_html/homolog
          
          # Atualiza dependências
          composer install --no-dev --optimize-autoloader
          
          # Configurações do Laravel
          php artisan storage:link
          php artisan optimize:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Migrações (se necessário)
          # php artisan migrate --force
          
          # Ajusta permissões (pode variar conforme necessidade)
          chmod -R 755 storage
          chmod -R 755 bootstrap/cache
          EOF